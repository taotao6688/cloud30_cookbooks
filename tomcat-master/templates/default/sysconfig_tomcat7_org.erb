#!/bin/sh

#
# Dynamically generated by Chef on <%= node["fqdn"] %>
#
# Local modifications will be overwritten by Chef.
#

# Service-specific configuration file for tomcat7. This will be sourced by
# the SysV init script after the global configuration file
# /etc/tomcat7/tomcat7.conf, thus allowing values to be overridden in
# a per-service manner.
#
# NEVER change the init script itself. To change values for all services make
# your changes in /etc/tomcat7/tomcat7.conf
#
# To change values for a specific service make your edits here.
# To create a new service create a link from /etc/init.d/<your new service> to
# /etc/init.d/tomcat7 (do not copy the init script) and make a copy of the
# /etc/sysconfig/tomcat7 file to /etc/sysconfig/<your new service> and change
# the property values so the two services won't conflict. Register the new
# service in the system as usual (see chkconfig and similars).
#



 
### BEGIN INIT INFO
# Provides:          tomcat
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop Apache Tomcat
# Description:       Enable Apache Tomcat service provided by daemon.
### END INIT INFO

# Where your java installation lives
JAVA_HOME=<%= node["java"]["java_home"] %>

# Where your tomcat installation lives
CATALINA_BASE="<%= node["tomcat"]["base"] %>"
CATALINA_HOME="<%= node["tomcat"]["home"] %>"
JASPER_HOME="<%= node["tomcat"]["home"] %>"
CATALINA_TMPDIR="<%= node["tomcat"]["tmp_dir"] %>"

 
ECHO=/bin/echo
TEST=/usr/bin/test

TOMCAT_START_SCRIPT=$CATALINA_HOME/bin/startup.sh
TOMCAT_STOP_SCRIPT=$CATALINA_HOME/bin/shutdown.sh


# You can pass some parameters to java here if you wish to
JAVA_OPTS="<%= node["tomcat"]["java_options"] %>"

# Use JAVA_OPTS to set java.library.path for libtcnative.so
#JAVA_OPTS="-Djava.library.path=/usr/lib64"

# What user should run tomcat
TOMCAT_USER="<%= node["tomcat"]["user"] %>"

# You can change your tomcat locale here
#LANG="en_US"

# Run tomcat under the Java Security Manager
SECURITY_MANAGER="<%= node["tomcat"]["use_security_manager"] %>"

# Time to wait in seconds, before killing process
#SHUTDOWN_WAIT="30"

# Whether to annoy the user with "attempting to shut down" messages or not
#SHUTDOWN_VERBOSE="false"

# Set the TOMCAT_PID location
CATALINA_PID="<%= node["tomcat"]["log_dir"] %>/catalina.pid"

# JVM parameters passed only for start and run commands
CATALINA_OPTS="<%= node["tomcat"]["catalina_options"] %>"

# Endorse .jar files in this directory
JAVA_ENDORSED_DIRS="<%= node["tomcat"]["endorsed_dir"] %>"

export CATALINA_PID

# If you wish to further customize your tomcat environment,
# put your own definitions here
# (i.e. LD_LIBRARY_PATH for some jdbc drivers)

 $TEST -x $TOMCAT_START_SCRIPT || exit 0
$TEST -x $TOMCAT_STOP_SCRIPT || exit 0

# End configuration section

echo "called " >> /tmp/tomcat.txt

start() {
pid=`cat $CATALINA_PID 2>/dev/null`
if [ -n "$pid" ]
then
echo "Tomcat is already running (pid: $pid)" >> /tmp/tomcat.txt
else
# Start tomcat
echo "Starting tomcat"  >> /tmp/tomcat.txt
touch $CATALINA_PID
$TOMCAT_START_SCRIPT &  >> /tmp/tomcat.txt

fi

return 0
}

stop() {
pid=`cat $CATALINA_PID 2>/dev/null`
if [ -n "$pid" ]
then
echo -n -e "\nkilling processes which didn't stop"
        kill -9 $pid
    fi
echo "Tomcat has stopped"

rm -f $CATALINA_PID
}

echo "Option : $1 " >> /tmp/tomcat.txt

case $1 in
start)
start
;;
stop)
stop
;;
restart)
stop
start
;;
status)
pid=$(tomcat_pid)
if [ -n "$pid" ]
then
echo "Tomcat is running with pid: $pid"  >> /tmp/tomcat.txt
else
echo "Tomcat is not running"  >> /tmp/tomcat.txt
start
fi
;;
esac
exit 0